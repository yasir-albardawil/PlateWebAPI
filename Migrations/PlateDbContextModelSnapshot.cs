// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlateWebAPI.DBContext;

#nullable disable

namespace PlateWebAPI.Migrations
{
    [DbContext(typeof(PlateDbContext))]
    partial class PlateDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlateWebAPI.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Fruit Pies",
                            Description = "Pies made with various fruits"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Cakes",
                            Description = "Various types of cakes"
                        });
                });

            modelBuilder.Entity("PlateWebAPI.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AllergyInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPieOfTheWeek")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllergyInformation = "Contains gluten",
                            CategoryId = 1,
                            ImageThumbnailUrl = "https://example.com/apple-pie-thumb.jpg",
                            ImageUrl = "https://example.com/apple-pie.jpg",
                            InStock = true,
                            IsPieOfTheWeek = true,
                            LongDescription = "A classic dessert made with fresh apples and cinnamon, baked to perfection.",
                            Name = "Apple Item",
                            Price = 12.99m,
                            ShortDescription = "Delicious apple pie"
                        },
                        new
                        {
                            Id = 2,
                            AllergyInformation = "Contains dairy, gluten",
                            CategoryId = 2,
                            ImageThumbnailUrl = "https://example.com/chocolate-cake-thumb.jpg",
                            ImageUrl = "https://example.com/chocolate-cake.jpg",
                            InStock = true,
                            IsPieOfTheWeek = false,
                            LongDescription = "Decadent chocolate cake layered with chocolate ganache and topped with chocolate shavings.",
                            Name = "Chocolate Cake",
                            Price = 19.99m,
                            ShortDescription = "Rich chocolate cake"
                        });
                });

            modelBuilder.Entity("PlateWebAPI.Entities.Item", b =>
                {
                    b.HasOne("PlateWebAPI.Entities.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PlateWebAPI.Entities.Category", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
